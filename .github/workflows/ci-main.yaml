name: "Continuous Integration - Main/Release"
on:
  push:
    branches:
      - main
      - release/*
    paths-ignore:
      - '**/README.md'
      - 'kustomize/**'
      - '.github/workflows/kustomize-build-ci.yaml'
      - 'terraform/**'
      - '.github/workflows/terraform-validate-ci.yaml'
      - 'helm-chart/**'
      - '.github/workflows/helm-chart-ci.yaml'

jobs:
  code-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0'
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24'
    - name: Go Unit Tests
      timeout-minutes: 10
      run: |
        for SERVICE in "shippingservice" "productcatalogservice"; do
          echo "testing $SERVICE..."
          pushd src/$SERVICE
          go test
          popd
        done
    - name: C# Unit Tests
      timeout-minutes: 10
      run: |
        dotnet test src/cartservice/

  deployment-tests:
    runs-on: ubuntu-latest
    needs: code-tests
    steps:
    - uses: actions/checkout@v4
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: microservices-demo-464120
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
    - name: Install Skaffold
      run: |
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        chmod +x skaffold
        sudo mv skaffold /usr/local/bin
    - name: Build + Deploy PR images to GKE
      timeout-minutes: 20
      run: |
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        NAMESPACE="pr${PR_NUMBER}"

        # Configure Docker authentication without interactive prompt
        gcloud auth configure-docker us-docker.pkg.dev --quiet

        # Get cluster credentials
        gcloud container clusters get-credentials $PR_CLUSTER --region $REGION --project $PROJECT_ID

        # Create namespace
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Namespace
        metadata:
          name: $NAMESPACE
        EOF

        echo "Deploying application to namespace: $NAMESPACE"
        skaffold config set --global local-cluster false
        skaffold run --default-repo=us-docker.pkg.dev/$PROJECT_ID/microservices-demo --tag=$GITHUB_SHA --namespace=$NAMESPACE
      env:
        PROJECT_ID: "microservices-demo-464120"
        PR_CLUSTER: "demo"
        REGION: "us-central1"
    - name: Wait For Pods
      timeout-minutes: 20
      run: |
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        NAMESPACE="pr${PR_NUMBER}"

        kubectl config set-context --current --namespace=$NAMESPACE
        kubectl wait --for=condition=available --timeout=1000s deployment/redis-cart
        kubectl wait --for=condition=available --timeout=1000s deployment/adservice
        kubectl wait --for=condition=available --timeout=1000s deployment/cartservice
        kubectl wait --for=condition=available --timeout=1000s deployment/checkoutservice
        kubectl wait --for=condition=available --timeout=1000s deployment/currencyservice
        kubectl wait --for=condition=available --timeout=1000s deployment/emailservice
        kubectl wait --for=condition=available --timeout=1000s deployment/frontend
        kubectl wait --for=condition=available --timeout=1000s deployment/loadgenerator
        kubectl wait --for=condition=available --timeout=1000s deployment/paymentservice
        kubectl wait --for=condition=available --timeout=1000s deployment/productcatalogservice
        kubectl wait --for=condition=available --timeout=1000s deployment/recommendationservice
        kubectl wait --for=condition=available --timeout=1000s deployment/shippingservice
    - name: Smoke Test
      timeout-minutes: 5
      run: |
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        NAMESPACE="pr${PR_NUMBER}"

        kubectl config set-context --current --namespace=$NAMESPACE

        # start fresh loadgenerator pod
        kubectl delete pod -l app=loadgenerator

        # wait for requests to come in
        REQUEST_COUNT="0"
        while [[ "$REQUEST_COUNT" -lt "50" ]]; do
            sleep 5
            REQUEST_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $2}' || echo "0")
        done

        # ensure there are no errors hitting endpoints
        ERROR_COUNT=$(kubectl logs -l app=loadgenerator | grep Aggregated | awk '{print $3}' | sed "s/[(][^)]*[)]//g" || echo "0")
        if [[ "$ERROR_COUNT" -gt "0" ]]; then
          echo "Found $ERROR_COUNT errors in load generator logs"
          exit 1
        fi

        echo "Smoke test passed with $REQUEST_COUNT requests and $ERROR_COUNT errors"
